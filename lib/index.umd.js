!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).requestCacheManager={})}(this,(function(e){"use strict";function n(e,n,t,i){return new(t||(t=Promise))((function(o,r){function c(e){try{f(i.next(e))}catch(e){r(e)}}function u(e){try{f(i.throw(e))}catch(e){r(e)}}function f(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(c,u)}f((i=i.apply(e,n||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const t={all:i=i||new Map,on:function(e,n){var t=i.get(e);t?t.push(n):i.set(e,[n])},off:function(e,n){var t=i.get(e);t&&(n?t.splice(t.indexOf(n)>>>0,1):i.set(e,[]))},emit:function(e,n){var t=i.get(e);t&&t.slice().map((function(e){e(n)})),(t=i.get("*"))&&t.slice().map((function(t){t(e,n)}))}};var i;const o=18e4,r={},c=[],u={};e.DEFAULT_EXPIRE_TIME=o,e.DEFAULT_MAX_CACHE_COUNT=50,e.dumpCache=function(){console.log("lru",c),console.log("cacheRecord",r)},e.emitter=t,e.init=function(e={}){var i,f;function s(n){const t=c.indexOf(n);if(-1===t){if(c.length+1>e.maxCacheCount){const e=c.shift(),{id:n,requestKey:t}=function(e){const n=e.indexOf("_");if(-1===n)throw new Error(`lruKey is invalid: ${e}`);return{id:e.slice(0,n),requestKey:e.slice(n+1)}}(e);delete r[n][t]}}else c.splice(t,1);c.push(n)}return e.expireTime=null!==(i=e.expireTime)&&void 0!==i?i:o,e.maxCacheCount=null!==(f=e.maxCacheCount)&&void 0!==f?f:50,function(i,o){function c(){r[o]=Object.create(null)}return o||(o=i.name),t.off(o,c),t.on(o,c),function(...t){return n(this,void 0,void 0,(function*(){const n=JSON.stringify(t),c=Date.now(),f=r[o]||(r[o]=Object.create(null)),a=f[n];if(a&&a.meta.expire>c)return a.data;const l=function(e,n){return`${e}_${n}`}(o,n),d=u[l];if(d)return new Promise(((e,n)=>{d.push([e,n])}));try{u[l]=[];const o=yield i(...t);return f[n]=null!=a?a:{data:o,meta:{expire:0}},f[n].meta.expire=c+e.expireTime,s(l),u[l].forEach((([e])=>e(o))),o}catch(e){return console.log(`[cachedRequest] error: ${e.message}`),u[l].forEach((([,n])=>n(e))),null}finally{delete u[l]}}))}}}}));
